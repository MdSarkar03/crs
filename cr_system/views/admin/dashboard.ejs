<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.0.0/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 dark:bg-gray-900">
    <nav class="fixed top-0 w-full z-10 bg-gray-800 text-white p-4 shadow-lg">
        <div class="container mx-auto flex justify-between items-center">
            <a href="/admin/dashboard" class="hover:text-blue-400">Home</a>
            <ul class="flex space-x-4">
                <li><a id="view-companies" class="hover:text-blue-300">Companies</a></li>
                <li><a id="view-students" class="hover:text-blue-300">Students</a></li>
                <li><a id="view-jobs" class="hover:text-blue-300">Jobs</a></li>
                <li><a href="/admin/signout" class="hover:text-blue-400">Sign Out</a></li>
            </ul>
        </div>
    </nav>

    <div class="mx-auto mt-16 shadow-lg">
        <h2 class="text-xl font-bold text-orange-600 mb-4">Welcome, Admin!</h2>
    </div>

    <!-- Companies Modal -->
    <div id="companies-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex justify-center items-center">
        <div class="bg-gray-800 text-white p-6 rounded-lg shadow-lg w-full max-w-3xl max-h-[80vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4 sticky top-0 bg-gray-800 z-10">
                <h3 class="text-lg font-semibold text-orange-500">Companies</h3>
                <button id="close-companies" class="text-white text-2xl bg-transparent hover:bg-gray-700 rounded-lg p-2">&times;</button>
            </div>
            <% if (companies && companies.length > 0) { %>
                <ul>
                    <% companies.forEach(company => { %>
                        <li class="bg-gray-700 p-4 rounded-lg mb-2 relative">
                            <h4 class="text-lg font-bold text-white"><%= company.name %></h4>
                            <p class="text-sm text-gray-300"><strong>Email:</strong> <%= company.email %></p>
                            <p class="text-sm text-gray-300"><strong>Phone:</strong> <%= company.phone %></p>
                            <p class="text-sm text-gray-300"><strong>Location:</strong> <%= company.location %></p>
                            <button 
                                class="delete-btn bg-red-500 hover:bg-red-600 text-white text-sm px-3 py-1 rounded absolute bottom-4 right-4" 
                                data-type="company" 
                                data-id="<%= company._id %>">
                                Delete
                            </button>
                        </li>
                    <% }) %>
                </ul>
            <% } else { %>
                <p class="text-gray-400">No companies available.</p>
            <% } %>
        </div>
    </div>

    <!-- Students Modal -->
    <div id="students-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex justify-center items-center">
        <div class="bg-gray-800 text-white p-6 rounded-lg shadow-lg w-full max-w-3xl max-h-[80vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4 sticky top-0 bg-gray-800 z-10">
                <h3 class="text-lg font-semibold text-orange-500">Students</h3>
                <button id="close-students" class="text-white text-2xl bg-transparent hover:bg-gray-700 rounded-lg p-2">&times;</button>
            </div>
            <% if (students && students.length > 0) { %>
                <ul>
                    <% students.forEach(student => { %>
                        <li class="bg-gray-700 p-4 rounded-lg mb-2 relative">
                            <h4 class="text-lg font-bold text-white"><%= student.name %></h4>
                            <p class="text-sm text-gray-300"><strong>Email:</strong> <%= student.email %></p>
                            <p class="text-sm text-gray-300"><strong>Phone:</strong> <%= student.phone %></p>
                            <p class="text-sm text-gray-300"><strong>Semester:</strong> <%= student.semester %></p>
                            <button 
                                class="delete-btn bg-red-500 hover:bg-red-600 text-white text-sm px-3 py-1 rounded absolute bottom-4 right-4" 
                                data-type="student" 
                                data-id="<%= student._id %>">
                                Delete
                            </button>
                        </li>
                    <% }) %>
                </ul>
            <% } else { %>
                <p class="text-gray-400">No students available.</p>
            <% } %>
        </div>
    </div>

    <!-- Jobs Modal -->
    <div id="jobs-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex justify-center items-center">
        <div class="bg-gray-800 text-white p-6 rounded-lg shadow-lg w-full max-w-3xl max-h-[80vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4 sticky top-0 bg-gray-800 z-10">
                <h3 class="text-lg font-semibold text-orange-500">Jobs</h3>
                <button id="close-jobs" class="text-white text-2xl bg-transparent hover:bg-gray-700 rounded-lg p-2">&times;</button>
            </div>
            <% if (jobs && jobs.length > 0) { %>
                <ul>
                    <% jobs.forEach(job => { %>
                        <li class="bg-gray-700 p-4 rounded-lg mb-2">
                            <h4 class="text-lg font-bold text-white"><%= job.title %></h4>
                            <p class="text-sm text-gray-300"><strong>Salary:</strong> ₹<%= job.salary %></p>
                            <p class="text-sm text-gray-300"><strong>Last date to apply:</strong> ₹<%= new Date(job.lastDate).toLocaleDateString() %></p>
                            <p class="text-md text-gray-300 mt-2"><strong>Posted by:</strong><% if (job.companyId && job.companyId.name) { %>
                                <%= job.companyId.name %>
                            <% } else { %>
                                Not specified
                            <% } %></p>
                            <p class="text-sm text-gray-400"><strong>Posted on:</strong> ₹<%= new Date(job.createdAt).toLocaleDateString() %></p>
                        </li>
                    <% }) %>
                </ul>
            <% } else { %>
                <p class="text-gray-400">No jobs available.</p>
            <% } %>
        </div>
    </div>

    <script>    //Toggle modal
        // Companies
        document.getElementById("view-companies").addEventListener("click", () => {
            document.getElementById("companies-modal").classList.remove("hidden");
        });
        document.getElementById("close-companies").addEventListener("click", () => {
            document.getElementById("companies-modal").classList.add("hidden");
        });

        // Students
        document.getElementById("view-students").addEventListener("click", () => {
            document.getElementById("students-modal").classList.remove("hidden");
        });
        document.getElementById("close-students").addEventListener("click", () => {
            document.getElementById("students-modal").classList.add("hidden");
        });

        // Jobs
        document.getElementById("view-jobs").addEventListener("click", () => {
            document.getElementById("jobs-modal").classList.remove("hidden");
        });
        document.getElementById("close-jobs").addEventListener("click", () => {
            document.getElementById("jobs-modal").classList.add("hidden");
        });
    </script>

    <script>    //Fetch and render
        async function fetchCompanies() {
            const response = await fetch('/admin/companies');
            const companies = await response.json();
            renderCompanies(companies);
        }
        async function fetchStudents() {
            const response = await fetch('/admin/students');
            const students = await response.json();
            renderStudents(students);
        }
        async function fetchJobs() {
            const response = await fetch('/admin/jobs');
            const jobs = await response.json();
            renderJobs(jobs);
        }

        function renderCompanies(companies) {
            const container = document.getElementById('companies-modal');
            container.innerHTML = companies.map(company => `
                <div class="bg-gray-700 p-4 rounded-lg shadow-md mb-4">
                    <h4 class="text-lg font-bold text-white">${company.name}</h4>
                    <p class="text-sm text-gray-300">Email: ${company.email}</p>
                    <p class="text-sm text-gray-300">Phone: ${company.phone}</p>
                    <p class="text-sm text-gray-300">Location: ${company.location}</p>
                    <button 
                        class="delete-btn bg-red-500 text-white text-sm px-3 py-1 rounded absolute bottom-4 right-4" 
                        data-type="company" 
                        data-id="${company._id}">
                        Delete
                    </button>
                </div>
            `).join('');
        }

        function renderStudents(students) {
            const container = document.getElementById('students-modal');
            container.innerHTML = students.map(student => `
                <div class="bg-gray-700 p-4 rounded-lg shadow-md mb-4">
                    <h4 class="text-lg font-bold text-white">${student.name}</h4>
                    <p class="text-sm text-gray-300">Email: ${student.email}</p>
                    <p class="text-sm text-gray-300">Phone: ${student.phone}</p>
                    <p class="text-sm text-gray-300">Semester: ${student.semester}</p>
                    <button 
                        class="delete-btn bg-red-500 text-white text-sm px-3 py-1 rounded absolute bottom-4 right-4" 
                        data-type="student" 
                        data-id="${student._id}">
                        Delete
                    </button>
                </div>
            `).join('');
        }
        
        function renderJobs(jobs) {
            const container = document.getElementById('jobs-modal');
            container.innerHTML = jobs.map(job => `
                <div class="bg-gray-700 p-4 rounded-lg shadow-md mb-4">
                    <h4 class="text-lg font-bold text-white">${job.title}</h4>
                    <p class="text-sm text-gray-300">Salary: ₹${job.salary}</p>
                    <p class="text-sm text-gray-300">Last date to apply: ${new Date(job.lastDate).toLocaleDateString()}</p>
                    <p class="text-sm text-gray-300">Posted by: ${job.companyId.name || 'N/A'}</p>
                    <p class="text-sm text-gray-300">Posted on: ${new Date(job.createdAt).toLocaleDateString()}</p>
                </div>
            `).join('');
        }
        // Trigger data fetching on page load
        document.addEventListener('DOMContentLoaded', () => {
            fetchCompanies();
            fetchStudents();
            fetchJobs();
        });

        document.addEventListener('click', async function (event) {
            if (event.target.classList.contains('delete-btn')) {
                const entityId = event.target.getAttribute('data-id');
                const entityType = event.target.getAttribute('data-type');
                const confirmed = confirm(`Are you sure you want to delete this ${entityType}?`);
                
                if (confirmed) {
                    await deleteEntity(entityType, entityId);
                    if (entityType === 'company') {
                        fetchCompanies();
                    } else if (entityType === 'student') {
                        fetchStudents();
                    }
                }
            }
        });

        async function deleteEntity(type, id) {
            try {
                const response = await fetch(`/admin/${type}/${id}`, {
                    method: 'DELETE',
                });
                if (response.ok) {
                    alert(`${type.charAt(0).toUpperCase() + type.slice(1)} deleted successfully.`);
                } else {
                    alert(`Failed to delete the ${type}. Please try again.`);
                }
            } catch (error) {
                console.error(`Error deleting ${type}:`, error);
                alert('An error occurred. Please try again later.');
            }
        }

    </script>

    <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
</body>
</html>
